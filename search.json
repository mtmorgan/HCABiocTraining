[{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"essential-r","dir":"Articles","previous_headings":"","what":"Essential R","title":"A. Introduction to R","text":"simple calculator ‘Vectors’ building blocks Variables, missing values ‘factors’ Data structures coordinate related vectors – data.frame Functions   ‘Vectorized’ operations, e.g., element-wise addition without explicit ‘’ loop  Write functions Iterate, usually lapply() although () available","code":"1 + 1 ## [1] 2 c(1, 2, 3) ## [1] 1 2 3 c(\"January\", \"February\", \"March\") ## [1] \"January\"  \"February\" \"March\" c(TRUE, FALSE) ## [1]  TRUE FALSE age <- c(27, NA, 32, 29) gender <- factor(     c(\"Female\", \"Male\", \"Non-binary\", NA),     levels = c(\"Female\", \"Male\", \"Non-binary\") ) df <- data.frame(     age = c(27, NA, 32, 29),     gender = gender ) df ##   age     gender ## 1  27     Female ## 2  NA       Male ## 3  32 Non-binary ## 4  29       <NA> rnorm(5)        # 5 random normal deviates ## [1] -0.2847867 -1.1290080  1.0396164  1.5149803  0.7394517 x <- rnorm(100) # 100 random normal deviates hist(x)         # histogram, approximately normal plot(density(x)) # a little more sophisticated? y <- x + rnorm(100) plot(y ~ x) fit <- lm(y ~ x) fit         # an R 'object' containing information about the ##  ## Call: ## lm(formula = y ~ x) ##  ## Coefficients: ## (Intercept)            x   ##      0.1277       1.0544             # regression of y on x abline(fit) # plot points and fitted regression line anova(fit)  # statistical summary of linear regression ## Analysis of Variance Table ##  ## Response: y ##           Df  Sum Sq Mean Sq F value    Pr(>F)     ## x          1 123.252 123.252   138.8 < 2.2e-16 *** ## Residuals 98  87.024   0.888                       ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 hello <- function(who) {     paste(\"hello\", who, \"with\", nchar(who), \"letters in your name\") } hello(\"Martin\") ## [1] \"hello Martin with 6 letters in your name\" names <- c(\"Martin\", \"Thomas\") lapply(names, hello) ## [[1]] ## [1] \"hello Martin with 6 letters in your name\" ##  ## [[2]] ## [1] \"hello Thomas with 6 letters in your name\""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"A. Introduction to R","text":"Extend functionality base R. Can part ‘base’ distribution… …contributed, e.g., dplyr introduce ‘tidyverse’ ‘tibble’ like ‘data.frame’, user-friendly tidyverse makes use ‘pipes’ |>. pipe takes left-hand side pass right-hand side. Key dplyr ‘verbs’ can piped together: filter() (rows), select() (columns), mutate() (change values), group_by() (operate groups rows) Another example: ggplot2 visualization","code":"## iterate over the numbers 1 through 8, 'sleeping' for 1 second ## each. Takes about 8 seconds... system.time({     lapply(1:8, function(i) Sys.sleep(1)) }) ##    user  system elapsed  ##   0.004   0.001   8.028  ## sleep in parallel -- takes only 2 seconds library(parallel) cl <- makeCluster(4) # cluster of 4 workers system.time({     parLapply(cl, 1:8, function(i) Sys.sleep(1)) }) ##    user  system elapsed  ##   0.003   0.001   2.044 library(dplyr) tbl <- tibble(     x = rnorm(100),     y = x + rnorm(100) )  ## e.g., only displays the first 10 rows tbl ## # A tibble: 100 × 2 ##         x      y ##     <dbl>  <dbl> ##  1 -1.14  -2.50  ##  2  2.25   2.17  ##  3  0.698 -0.479 ##  4  0.489  0.559 ##  5  0.926  2.19  ##  6 -0.978 -1.60  ##  7 -0.863 -0.750 ##  8  2.29   3.99  ##  9  1.70   1.39  ## 10 -0.219 -1.33  ## # … with 90 more rows tbl |>     ## e.g., just rows with non-negative values of x and y     filter(x > 0, y > 0) |>     ## add a column     mutate(distance_from_origin = sqrt(x^2 + y^2)) ## # A tibble: 43 × 3 ##        x     y distance_from_origin ##    <dbl> <dbl>                <dbl> ##  1 2.25  2.17                 3.13  ##  2 0.489 0.559                0.743 ##  3 0.926 2.19                 2.38  ##  4 2.29  3.99                 4.60  ##  5 1.70  1.39                 2.19  ##  6 1.92  1.63                 2.52  ##  7 1.75  3.45                 3.87  ##  8 0.655 0.614                0.898 ##  9 0.202 1.42                 1.44  ## 10 0.220 0.208                0.303 ## # … with 33 more rows library(ggplot2) ggplot(tbl) +     aes(x, y) +                # use 'x' and 'y' columns for plotting...     geom_point() +             # ...plot points...     geom_smooth(method = \"lm\") # ...linear regresion ## `geom_smooth()` using formula 'y ~ x'"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"where-do-packages-come-from","dir":"Articles","previous_headings":"Packages","what":"Where do Packages Come From?","title":"A. Introduction to R","text":"CRAN: Comprehensive R Archive Network. 18,000 packages. help CRAN Task Views identifying relevant packages. Bioconductor: 2100 packages relevant high-throughput genomic analysis. Vignettes important part Bioconductor packages. Install packages per R installation, using BiocManager::install(<package-name>) (CRAN Bioconductor) GitHub? Packages haven’t checked formal system, may incomplete code, documentation, dependencies packages, etc. Authors may yet committed long-term maintenance package.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"help-vignettes","dir":"Articles","previous_headings":"","what":"Help & Vignettes","title":"A. Introduction to R","text":"Help pages, e.g., ?lm Vignettes, e.g., Google, StackOverflow, etc…","code":"vignette(package = \"ggplot2\") vignette(\"ggplot2-specs\", \"ggplot2\")"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"data-transformations","dir":"Articles","previous_headings":"","what":"Data Transformations","title":"B. Accessing HCA Data from R / Bioconductor","text":"FASTQ files DNA sequences quality scores large Processed e.g., CellRanger software Quality control, summary count matrix () Count matrix Usually genes (rows) x cells (columns) Can large (e.g., 30,000 genes x 50,000 cells) Usually sparse, e.g., 95% cells ‘0’. Still large enough require decent amount computing power, e.g., 32 GB RAM, 8 CPU steps. Common formats CSV file – lots zero’s wasteful space. ‘Matrix Market’ sparse matrix files, e.g., tuples <row, column, count> non-zero values. HDF5, e.g., .loom .h5ad (anndata). Representation R -memory sparse matrices: dgCMatrix class Matrix package -disk representation via Bioconductor’s DelayedArray / HDF5Array. Counts & annotations CSV Matrix Market files store just counts; usually annotations columns (e.g., sample cell come ?) stored separately. HDF5 file formats coordinate row column annotations count data. R software tries offer coordinated representation counts metadata, e.g., Bioconductor’s SingleCellExperiment.","code":""},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"human-cell-atlas","dir":"Articles","previous_headings":"Data Discovery","what":"Human Cell Atlas","title":"B. Accessing HCA Data from R / Bioconductor","text":"Data portal  ’s available? Project & sample annotations HCA-funded projects FASTQ files ‘Legacy’ .loom files 50 experiments Ad hoc count matrix data – mostly CSV Matrix Market files – easy download, … Count matrix data uncertain provenance (computed?). Often considerable work required create usable data, e.g., hcaCaseStudies","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"cellxgene","dir":"Articles","previous_headings":"Data Discovery","what":"CellXGene","title":"B. Accessing HCA Data from R / Bioconductor","text":"Data Portal  ’s available? Collections datasets contributed single-cell community, overlap data sets HCA Data Portal. FASTQ files .h5ad-summarized count data cell metadata, well reduced-dimension (e.g., UMAP) representations Summarized count files provided contributor / individual lab, uncertain provenance Easy download count matrix, e.g., .h5ad (anndata) format Easy visualize (!)","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"programatic-discovery","dir":"Articles","previous_headings":"","what":"Programatic Discovery","title":"B. Accessing HCA Data from R / Bioconductor","text":"use R script Data Portals exist? Easily reproducible Flexible exploration rich & complex data Direct integration Bioconductor single-cell workflows","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"human-cell-atlas-1","dir":"Articles","previous_headings":"Programatic Discovery","what":"Human Cell Atlas","title":"B. Accessing HCA Data from R / Bioconductor","text":"See ExploratingHCACxG workshop HCA data retrieval retrieving legacy .loom files. See hcaCaseStudies examples processing CSV Matrix Market files.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"cellxgene-1","dir":"Articles","previous_headings":"Programatic Discovery","what":"CellXGene","title":"B. Accessing HCA Data from R / Bioconductor","text":"Load [cellxgenedp][] package Retrieve current database, use ‘tidy’ functionality mimic graphical selection web browser – 10x 3’ v3 (EFO:0009922) assay, Affrican American ethnicity, female gender) ‘Join’ selected datasets files identify files associated datasets. Filter first ‘CXG’ file visualize (open browser)… …select ‘H5AD’ file download subsequent processing R downloaded file cached, next time access fast.","code":"library(cellxgenedp) db <- db() african_american_female <-     datasets(db) |>     dplyr::filter(         facets_filter(assay, \"ontology_term_id\", \"EFO:0009922\"),         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) african_american_female ## # A tibble: 21 × 28 ##    dataset_id     colle…¹ donor…² assay  cell_…³ cell_…⁴ datas…⁵ devel…⁶ disease ##    <chr>          <chr>   <list>  <list>   <int> <list>  <chr>   <list>  <list>  ##  1 de985818-285f… c9706a… <list>  <list>   31696 <list>  https:… <list>  <list>  ##  2 f72958f5-7f42… 2f75d2… <list>  <list>  982538 <list>  https:… <list>  <list>  ##  3 bc2a7b3d-f04e… b9fc3d… <list>  <list>  109995 <list>  https:… <list>  <list>  ##  4 96a3f64b-0ee9… b9fc3d… <list>  <list>  239696 <list>  https:… <list>  <list>  ##  5 d9b4bc69-ed90… b9fc3d… <list>  <list>   20000 <list>  https:… <list>  <list>  ##  6 59b69042-47c2… b9fc3d… <list>  <list>   49139 <list>  https:… <list>  <list>  ##  7 e763ed0d-0e5a… b9fc3d… <list>  <list>    7274 <list>  https:… <list>  <list>  ##  8 db0752b9-f20e… b9fc3d… <list>  <list>   55348 <list>  https:… <list>  <list>  ##  9 e9175006-8978… 62e8f0… <list>  <list>   14072 <list>  https:… <list>  <list>  ## 10 d224c8e0-c28e… 62e8f0… <list>  <list>    8030 <list>  https:… <list>  <list>  ## # … with 11 more rows, 19 more variables: is_primary_data <chr>, ## #   is_valid <lgl>, linked_genesets <lgl>, mean_genes_per_cell <dbl>, ## #   name <chr>, organism <list>, processing_status <list>, published <lgl>, ## #   revision <int>, schema_version <chr>, self_reported_ethnicity <list>, ## #   sex <list>, suspension_type <list>, tissue <list>, tombstone <lgl>, ## #   created_at <date>, published_at <date>, revised_at <date>, ## #   updated_at <date>, and abbreviated variable names ¹​collection_id, … selected_files <-     left_join(         african_american_female |> select(dataset_id),         files(db),         by = \"dataset_id\"     ) selected_files ## # A tibble: 63 × 8 ##    dataset_id       file_id filen…¹ filet…² s3_uri user_…³ created_at updated_at ##    <chr>            <chr>   <chr>   <chr>   <chr>  <lgl>   <date>     <date>     ##  1 de985818-285f-4… 15e9d9… local.… H5AD    s3://… TRUE    2022-10-21 2022-10-21 ##  2 de985818-285f-4… 0d3974… explor… CXG     s3://… TRUE    2022-10-21 2022-10-21 ##  3 de985818-285f-4… e254f9… local.… RDS     s3://… TRUE    2022-10-21 2022-10-21 ##  4 f72958f5-7f42-4… 59bd46… local.… RDS     s3://… TRUE    2022-10-18 2022-10-18 ##  5 f72958f5-7f42-4… 3a2467… explor… CXG     s3://… TRUE    2022-10-18 2022-10-18 ##  6 f72958f5-7f42-4… d9f9d0… local.… H5AD    s3://… TRUE    2022-10-18 2022-10-18 ##  7 bc2a7b3d-f04e-4… f6d9f2… local.… H5AD    s3://… TRUE    2022-10-18 2022-10-18 ##  8 bc2a7b3d-f04e-4… 46de9c… explor… CXG     s3://… TRUE    2022-10-18 2022-10-18 ##  9 bc2a7b3d-f04e-4… 5331f2… local.… RDS     s3://… TRUE    2022-10-18 2022-10-18 ## 10 96a3f64b-0ee9-4… b77452… local.… H5AD    s3://… TRUE    2022-10-18 2022-10-18 ## # … with 53 more rows, and abbreviated variable names ¹​filename, ²​filetype, ## #   ³​user_submitted selected_files |>     dplyr::filter(filetype == \"CXG\") |>     dplyr::slice(1) |>     datasets_visualize() h5ad_file <-     selected_files |>     dplyr::filter(filetype == \"H5AD\") |>     dplyr::slice(1) |>     files_download(dry.run = FALSE)"},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"singlecellexperiment","dir":"Articles","previous_headings":"Representation in R","what":"SingleCellExperiment","title":"B. Accessing HCA Data from R / Bioconductor","text":"Easy work reduced-dimension data…  …also counts data, e.g., distribution reads per cell  …remove genes non-zero counts","code":"h5ad <- read_h5ad_as_sce(h5ad_file) h5ad ## class: SingleCellExperiment  ## dim: 33234 31696  ## metadata(3): default_embedding schema_version title ## assays(1): X ## rownames(33234): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 ##   ENSG00000268674 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0):  umap <- as_tibble(reducedDim(h5ad, \"X_umap\")) ## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if ## `.name_repair` is omitted as of tibble 2.0.0. ## ℹ Using compatibility `.name_repair`.  ggplot(umap) +     aes(x = V1, y = V2, color = h5ad$cell_type) +     geom_point(pch = \".\") reads_per_cell <-     h5ad |>     ## retrieve the matrix of gene x cell counts     assay() |>     ## calculate the column sums, i.e., reads mapped to each cell     colSums()  hist(log10(reads_per_cell)) reads_per_gene <-     h5ad |>     assay() |>     rowSums()  table(reads_per_gene != 0) ##  ## FALSE  TRUE  ## 10499 22735 h5ad[reads_per_gene != 0,] ## class: SingleCellExperiment  ## dim: 22735 31696  ## metadata(3): default_embedding schema_version title ## assays(1): X ## rownames(22735): ENSG00000238009 ENSG00000237491 ... ENSG00000276345 ##   ENSG00000271254 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0):"},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2022). HCABiocTraining: Introduction Human Cell Atlas Data Access & Analysis R / Bioconductor. R package version 0.0.2, https://mtmorgan.github.io/HCABiocTraining/.","code":"@Manual{,   title = {HCABiocTraining: Introduction to Human Cell Atlas Data Access & Analysis in R / Bioconductor},   author = {Martin Morgan},   year = {2022},   note = {R package version 0.0.2},   url = {https://mtmorgan.github.io/HCABiocTraining/}, }"},{"path":"https://mtmorgan.github.io/HCABiocTraining/index.html","id":"hcabioctraining","dir":"","previous_headings":"","what":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","title":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","text":"HCABiocTraining introduction Human Cell Atlas data retrieval analysis R / Bioconductor. focus single-cell RNA-seq data. wide range material covered, basic R advanced data analysis steps outlined ‘Orchestrating Single-Cell Analysis Bioconductor’ (OSCA). treatment superficial, hope unlocks opportunities reproducible, sophisticated analysis.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","text":"Install necessary software GitHub :","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://cran.r-project.org\") BiocManager::install(\"mtmorgan/HCABiocTraining\")"},{"path":"https://mtmorgan.github.io/HCABiocTraining/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","text":"articles repository cover four main topics Introduction R. Scripting, core functions, contributed packages. HCA Data Access. Using hca cellxgenedp packages data retrieval. R Bioconductor Analysis Single-Cell Expression Data. Introduction key resources available analysis single-cell expression data. Seurat. SingleCellExperiment ‘Orchestrating Single-Cell Analysis Bioconductor’ (OSCA) Prospects spatial extended analysis.","code":""}]
