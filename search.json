[{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"essential-r","dir":"Articles","previous_headings":"","what":"Essential R","title":"A. Introduction to R","text":"simple calculator ‘Vectors’ building blocks Variables, missing values ‘factors’ Data structures coordinate related vectors – data.frame Functions   ‘Vectorized’ operations, e.g., element-wise addition without explicit ‘’ loop  Write functions Iterate, usually lapply() although () available","code":"1 + 1 ## [1] 2 c(1, 2, 3) ## [1] 1 2 3 c(\"January\", \"February\", \"March\") ## [1] \"January\"  \"February\" \"March\" c(TRUE, FALSE) ## [1]  TRUE FALSE age <- c(27, NA, 32, 29) gender <- factor(     c(\"Female\", \"Male\", \"Non-binary\", NA),     levels = c(\"Female\", \"Male\", \"Non-binary\") ) df <- data.frame(     age = c(27, NA, 32, 29),     gender = gender ) df ##   age     gender ## 1  27     Female ## 2  NA       Male ## 3  32 Non-binary ## 4  29       <NA> rnorm(5)        # 5 random normal deviates ## [1] -0.2998626 -0.5255044  1.2547408 -0.1241495 -0.5111058 x <- rnorm(100) # 100 random normal deviates hist(x)         # histogram, approximately normal plot(density(x)) # a little more sophisticated? y <- x + rnorm(100) plot(y ~ x) fit <- lm(y ~ x) fit         # an R 'object' containing information about the ##  ## Call: ## lm(formula = y ~ x) ##  ## Coefficients: ## (Intercept)            x   ##     -0.1510       0.8496             # regression of y on x abline(fit) # plot points and fitted regression line anova(fit)  # statistical summary of linear regression ## Analysis of Variance Table ##  ## Response: y ##           Df  Sum Sq Mean Sq F value    Pr(>F)     ## x          1  82.062  82.062  77.732 4.461e-14 *** ## Residuals 98 103.459   1.056                       ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 hello <- function(who) {     paste(\"hello\", who, \"with\", nchar(who), \"letters in your name\") } hello(\"Martin\") ## [1] \"hello Martin with 6 letters in your name\" names <- c(\"Martin\", \"Thomas\") lapply(names, hello) ## [[1]] ## [1] \"hello Martin with 6 letters in your name\" ##  ## [[2]] ## [1] \"hello Thomas with 6 letters in your name\""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"A. Introduction to R","text":"Extend functionality base R. Can part ‘base’ distribution… …contributed, e.g., dplyr introduce ‘tidyverse’ ‘tibble’ like ‘data.frame’, user-friendly tidyverse makes use ‘pipes’ |>. pipe takes left-hand side pass right-hand side. Key dplyr ‘verbs’ can piped together: filter() (rows), select() (columns), mutate() (change values), group_by() (operate groups rows) Another example: ggplot2 visualization","code":"## iterate over the numbers 1 through 8, 'sleeping' for 1 second ## each. Takes about 8 seconds... system.time({     lapply(1:8, function(i) Sys.sleep(1)) }) ##    user  system elapsed  ##   0.002   0.000   8.010  ## sleep in parallel -- takes only 2 seconds library(parallel) cl <- makeCluster(4) # cluster of 4 workers system.time({     parLapply(cl, 1:8, function(i) Sys.sleep(1)) }) ##    user  system elapsed  ##   0.002   0.000   2.081 library(dplyr) tbl <- tibble(     x = rnorm(100),     y = x + rnorm(100) )  ## e.g., only displays the first 10 rows tbl ## # A tibble: 100 × 2 ##          x       y ##      <dbl>   <dbl> ##  1 -0.253  -0.782  ##  2  1.29   -0.501  ##  3 -0.408   0.728  ##  4  0.620   2.00   ##  5  0.587  -0.820  ##  6  2.15    4.08   ##  7 -0.896   0.557  ##  8  0.514  -0.0915 ##  9  0.0454  1.04   ## 10 -0.913  -0.651  ## # … with 90 more rows tbl |>     ## e.g., just rows with non-negative values of x and y     filter(x > 0, y > 0) |>     ## add a column     mutate(distance_from_origin = sqrt(x^2 + y^2)) ## # A tibble: 31 × 3 ##          x     y distance_from_origin ##      <dbl> <dbl>                <dbl> ##  1 0.620   2.00                 2.09  ##  2 2.15    4.08                 4.62  ##  3 0.0454  1.04                 1.04  ##  4 0.201   2.16                 2.17  ##  5 0.990   0.160                1.00  ##  6 1.76    1.58                 2.37  ##  7 0.402   1.69                 1.74  ##  8 0.00759 1.22                 1.22  ##  9 0.308   0.517                0.601 ## 10 0.317   0.650                0.723 ## # … with 21 more rows library(ggplot2) ggplot(tbl) +     aes(x, y) +                # use 'x' and 'y' columns for plotting...     geom_point() +             # ...plot points...     geom_smooth(method = \"lm\") # ...linear regresion ## `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"where-do-packages-come-from","dir":"Articles","previous_headings":"Packages","what":"Where do Packages Come From?","title":"A. Introduction to R","text":"CRAN: Comprehensive R Archive Network. 18,000 packages. help CRAN Task Views identifying relevant packages. Bioconductor: 2100 packages relevant high-throughput genomic analysis. Vignettes important part Bioconductor packages. Install packages per R installation, using BiocManager::install(<package-name>) (CRAN Bioconductor) GitHub? Packages haven’t checked formal system, may incomplete code, documentation, dependencies packages, etc. Authors may yet committed long-term maintenance package.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/a-intro-to-r.html","id":"help-vignettes","dir":"Articles","previous_headings":"","what":"Help & Vignettes","title":"A. Introduction to R","text":"Help pages, e.g., ?lm Vignettes, e.g., Google, StackOverflow, etc…","code":"vignette(package = \"ggplot2\") vignette(\"ggplot2-specs\", \"ggplot2\")"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"data-transformations","dir":"Articles","previous_headings":"","what":"Data Transformations","title":"B. Accessing HCA Data from R / Bioconductor","text":"FASTQ files DNA sequences quality scores large Processed e.g., CellRanger software Quality control, summary count matrix () Count matrix Usually genes (rows) x cells (columns) Can large (e.g., 30,000 genes x 50,000 cells) Usually sparse, e.g., 95% cells ‘0’. Still large enough require decent amount computing power, e.g., 32 GB RAM, 8 CPU steps. Common formats CSV file – lots zero’s wasteful space. ‘Matrix Market’ sparse matrix files, e.g., tuples <row, column, count> non-zero values. HDF5, e.g., .loom .h5ad (anndata). Representation R -memory sparse matrices: dgCMatrix class Matrix package -disk representation via Bioconductor’s DelayedArray / HDF5Array. Counts & annotations CSV Matrix Market files store just counts; usually annotations columns (e.g., sample cell come ?) stored separately. HDF5 file formats coordinate row column annotations count data. R software tries offer coordinated representation counts metadata, e.g., Bioconductor’s SingleCellExperiment.","code":""},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"human-cell-atlas","dir":"Articles","previous_headings":"Data Discovery","what":"Human Cell Atlas","title":"B. Accessing HCA Data from R / Bioconductor","text":"Data portal  ’s available? Project & sample annotations HCA-funded projects FASTQ files ‘Legacy’ .loom files 50 experiments Ad hoc count matrix data – mostly CSV Matrix Market files – easy download, … Count matrix data uncertain provenance (computed?). Often considerable work required create usable data, e.g., hcaCaseStudies","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"cellxgene","dir":"Articles","previous_headings":"Data Discovery","what":"CellXGene","title":"B. Accessing HCA Data from R / Bioconductor","text":"Data Portal  ’s available? Collections datasets contributed single-cell community, overlap data sets HCA Data Portal. FASTQ files .h5ad-summarized count data cell metadata, well reduced-dimension (e.g., UMAP) representations Summarized count files provided contributor / individual lab, uncertain provenance Easy download count matrix, e.g., .h5ad (anndata) format Easy visualize (!)","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"programatic-discovery","dir":"Articles","previous_headings":"","what":"Programatic Discovery","title":"B. Accessing HCA Data from R / Bioconductor","text":"use R script Data Portals exist? Easily reproducible Flexible exploration rich & complex data Direct integration Bioconductor single-cell workflows","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"human-cell-atlas-1","dir":"Articles","previous_headings":"Programatic Discovery","what":"Human Cell Atlas","title":"B. Accessing HCA Data from R / Bioconductor","text":"See ExploratingHCACxG workshop HCA data retrieval retrieving legacy .loom files. See hcaCaseStudies examples processing CSV Matrix Market files.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"cellxgene-1","dir":"Articles","previous_headings":"Programatic Discovery","what":"CellXGene","title":"B. Accessing HCA Data from R / Bioconductor","text":"Load [cellxgenedp][] package Retrieve current database, use ‘tidy’ functionality mimic graphical selection web browser – 10x 3’ v3 (EFO:0009922) assay, Affrican American ethnicity, female gender) ‘Join’ selected datasets files identify files associated datasets. Select first ‘CXG’ file available subset data; reproducibility retrieve dataset id… … set ; helper function training_cxg_dataset() provides summary dataset. Visualize ‘CXG’ file browser… …select ‘H5AD’ file associated dataset download subsequent processing R downloaded file cached, next time access fast.","code":"library(cellxgenedp) db <- db() african_american_female <-     datasets(db) |>     dplyr::filter(         facets_filter(assay, \"ontology_term_id\", \"EFO:0009922\"),         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) african_american_female ## # A tibble: 21 × 28 ##    dataset_id     colle…¹ donor…² assay  cell_…³ cell_…⁴ datas…⁵ devel…⁶ disease ##    <chr>          <chr>   <list>  <list>   <int> <list>  <chr>   <list>  <list>  ##  1 de985818-285f… c9706a… <list>  <list>   31696 <list>  https:… <list>  <list>  ##  2 f72958f5-7f42… 2f75d2… <list>  <list>  982538 <list>  https:… <list>  <list>  ##  3 bc2a7b3d-f04e… b9fc3d… <list>  <list>  109995 <list>  https:… <list>  <list>  ##  4 96a3f64b-0ee9… b9fc3d… <list>  <list>  239696 <list>  https:… <list>  <list>  ##  5 d9b4bc69-ed90… b9fc3d… <list>  <list>   20000 <list>  https:… <list>  <list>  ##  6 59b69042-47c2… b9fc3d… <list>  <list>   49139 <list>  https:… <list>  <list>  ##  7 e763ed0d-0e5a… b9fc3d… <list>  <list>    7274 <list>  https:… <list>  <list>  ##  8 db0752b9-f20e… b9fc3d… <list>  <list>   55348 <list>  https:… <list>  <list>  ##  9 e9175006-8978… 62e8f0… <list>  <list>   14072 <list>  https:… <list>  <list>  ## 10 d224c8e0-c28e… 62e8f0… <list>  <list>    8030 <list>  https:… <list>  <list>  ## # … with 11 more rows, 19 more variables: is_primary_data <chr>, ## #   is_valid <lgl>, linked_genesets <lgl>, mean_genes_per_cell <dbl>, ## #   name <chr>, organism <list>, processing_status <list>, published <lgl>, ## #   revision <int>, schema_version <chr>, self_reported_ethnicity <list>, ## #   sex <list>, suspension_type <list>, tissue <list>, tombstone <lgl>, ## #   created_at <date>, published_at <date>, revised_at <date>, ## #   updated_at <date>, and abbreviated variable names ¹​collection_id, … selected_files <-     left_join(         african_american_female |> select(dataset_id),         files(db),         by = \"dataset_id\"     ) selected_files ## # A tibble: 63 × 8 ##    dataset_id       file_id filen…¹ filet…² s3_uri user_…³ created_at updated_at ##    <chr>            <chr>   <chr>   <chr>   <chr>  <lgl>   <date>     <date>     ##  1 de985818-285f-4… 15e9d9… local.… H5AD    s3://… TRUE    2022-10-21 2022-10-21 ##  2 de985818-285f-4… 0d3974… explor… CXG     s3://… TRUE    2022-10-21 2022-10-21 ##  3 de985818-285f-4… e254f9… local.… RDS     s3://… TRUE    2022-10-21 2022-10-21 ##  4 f72958f5-7f42-4… 59bd46… local.… RDS     s3://… TRUE    2022-10-18 2022-10-18 ##  5 f72958f5-7f42-4… 3a2467… explor… CXG     s3://… TRUE    2022-10-18 2022-10-18 ##  6 f72958f5-7f42-4… d9f9d0… local.… H5AD    s3://… TRUE    2022-10-18 2022-10-18 ##  7 bc2a7b3d-f04e-4… f6d9f2… local.… H5AD    s3://… TRUE    2022-10-18 2022-10-18 ##  8 bc2a7b3d-f04e-4… 46de9c… explor… CXG     s3://… TRUE    2022-10-18 2022-10-18 ##  9 bc2a7b3d-f04e-4… 5331f2… local.… RDS     s3://… TRUE    2022-10-18 2022-10-18 ## 10 96a3f64b-0ee9-4… b77452… local.… H5AD    s3://… TRUE    2022-10-18 2022-10-18 ## # … with 53 more rows, and abbreviated variable names ¹​filename, ²​filetype, ## #   ³​user_submitted selected_files |>     dplyr::filter(filetype == \"CXG\") |>     dplyr::slice(1) |>     pull(dataset_id) ## [1] \"de985818-285f-4f59-9dbd-d74968fddba3\" ## \"de985818-285f-4f59-9dbd-d74968fddba3\" dataset <- \"de985818-285f-4f59-9dbd-d74968fddba3\" training_cxg_dataset(dataset) ## title: A single-cell atlas of the healthy breast tissues reveals ##     clinically relevant clusters of breast epithelial cells ## description: Single-cell RNA sequencing (scRNA-seq) is an evolving ##     technology used to elucidate the cellular architecture of adult ##     organs. Previous scRNA-seq on breast tissue utilized reduction ##     mammoplasty samples, which are often histologically abnormal. We ##     report a rapid tissue collection/processing protocol to perform ##     scRNA-seq of breast biopsies of healthy women and identify 23 ##     breast epithelial cell clusters. Putative cell-of-origin signatures ##     derived from these clusters are applied to analyze transcriptomes ##     of ~3,000 breast cancers. Gene signatures derived from mature ##     luminal cell clusters are enriched in ~68% of breast cancers, ##     whereas a signature from a luminal progenitor cluster is enriched ##     in ~20% of breast cancers. Overexpression of luminal progenitor ##     cluster-derived signatures in HER2+, but not in other subtypes, is ##     associated with unfavorable outcome. We identify TBX3 and PDK4 as ##     genes co-expressed with estrogen receptor (ER) in the normal ##     breasts, and their expression analyses in >550 breast cancers ##     enable prognostically relevant subclassification of ER+ breast ##     cancers. ## authors: Bhat-Nakshatri, Poornima; Gao, Hongyu; Sheng, Liu; McGuire, ##     Patrick C.; Xuei, Xiaoling; Wan, Jun; Liu, Yunlong; Althouse, ##     Sandra K.; Colter, Austyn; Sandusky, George; Storniolo, Anna Maria; ##     Nakshatri, Harikrishna ## journal: Cell Reports Medicine ## assays: 10x 3' v2; 10x 3' v3 ## organism: Homo sapiens ## ethnicity: African American; Chinese; European selected_files |>     dplyr::filter(filetype == \"CXG\", dataset_id == dataset) |>     datasets_visualize() h5ad_file <-     selected_files |>     dplyr::filter(filetype == \"H5AD\", dataset_id == dataset) |>     files_download(dry.run = FALSE)"},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/b-hca-data-access.html","id":"singlecellexperiment","dir":"Articles","previous_headings":"Representation in R","what":"SingleCellExperiment","title":"B. Accessing HCA Data from R / Bioconductor","text":"SingleCellExperiment used represent ‘rectangular’ single cell expression data R / Bioconductor. coordinates gene x cell count matricies (assay()) annotations genes (rowData()) columns (cellData()), reduced-dimension summaries. Usually, effective way represent .h5ad data SingleCellExperiment using zellkonverter::readH5AD(). Recent updates .h5ad file format unfortunately broken function; likely fixed timely manner. Instead, use helper function training_read_h5ad_as_sce() load data Displaying object… …suggests data available access – r nrow(h5ad) genes 31696 cells. ‘raw’ data include counts assays(h5ad, \"counts\"), annotations gene (rowData()) cell (colData()), etc… Working SingleCellExperiment objects described additional detail next article.","code":"h5ad <- training_read_h5ad_as_sce(h5ad_file) h5ad ## class: SingleCellExperiment  ## dim: 33234 31696  ## metadata(3): default_embedding schema_version title ## assays(1): counts ## rownames(33234): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 ##   ENSG00000268674 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0):"},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/c-sc-analysis.html","id":"seurat","dir":"Articles","previous_headings":"","what":"Seurat","title":"C. Single-Cell Sequence Analysis","text":"Based Getting Started Seurat Seurat - Guided Clustering Tutorial. guided tutorial covers Data input Quality Control Normalization Identification highly variable features Scaling data Linear dimensional reduction Clusters Non-linear dimensional reduction (e.g., UMAP) Differential expression Cell type assignment illustrating working Seurat, take first steps workflow.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/c-sc-analysis.html","id":"workflow","dir":"Articles","previous_headings":"Seurat","what":"Workflow","title":"C. Single-Cell Sequence Analysis","text":"re-capitulate initial steps Seurat tutorial. Data retrieval. retrieve raw data local cache. distributed compressed ‘tar’ archive, untar() temporary location. Following Seurat tutorial, read data sparse matrix, Seurat object. first step workflow perform quality control. Start identifying mitochondrial genes. particular example, mitchondrial genes annotated based feature name. Visualize metrics…  …use ad hoc criteria filter features; subset() base R function. workflow continues …","code":"## download to local cache url <- paste0(     \"https://cf.10xgenomics.com/samples/cell/pbmc3k/\",     \"pbmc3k_filtered_gene_bc_matrices.tar.gz\" ) pbmc3k_tar_gz <- BiocFileCache::bfcrpath(rname = url)  ## 'untar' to a temporary location pbmc3k_directory <- tempfile() untar(pbmc3k_tar_gz, exdir = pbmc3k_directory)  ## location of the relevant data pbmc3k_data_dir <-     file.path(pbmc3k_directory, \"filtered_gene_bc_matrices\", \"hg19\") library(Seurat) ## Attaching SeuratObject  ## read the 10x data as a sparse matrix pbmc.data <- Read10X(data.dir = pbmc3k_data_dir)  class(pbmc.data) ## [1] \"dgCMatrix\" ## attr(,\"package\") ## [1] \"Matrix\"  dim(pbmc.data) # 32738 features (genes) x 2700 samples (cells) ## [1] 32738  2700  ## create a Seurat object from the count matrix pbmc <- CreateSeuratObject(     counts = pbmc.data,     project = \"pbmc3k\",     ## filter some features (present in less than 3 cells) and cells     ## (fewer than 200 features)     min.cells = 3, min.features = 200 ) ## Warning: Feature names cannot have underscores ('_'), replacing with dashes ## ('-')  pbmc # 13714 features x 2700 samples ## An object of class Seurat  ## 13714 features across 2700 samples within 1 assay  ## Active assay: RNA (13714 features, 0 variable features)  pbmc[[\"RNA\"]] ## Assay data with 13714 features for 2700 cells ## First 10 features: ##  AL627309.1, AP006222.2, RP11-206L10.2, RP11-206L10.9, LINC00115, NOC2L, ## KLHL17, PLEKHN1, RP11-54O7.17, HES4 ## The [[ operator can add columns to object metadata. This is a great ## place to stash QC stats pbmc[[\"percent.mt\"]] <- PercentageFeatureSet(pbmc, pattern = \"^MT-\") VlnPlot(     pbmc,     features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\"),     ncol = 3 ) pbmc <- subset(     pbmc,     subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5 )  pbmc ## An object of class Seurat  ## 13714 features across 2638 samples within 1 assay  ## Active assay: RNA (13714 features, 0 variable features)"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/c-sc-analysis.html","id":"bioconductor","dir":"Articles","previous_headings":"","what":"Bioconductor","title":"C. Single-Cell Sequence Analysis","text":"following based Orchestrating Single-Cell Analysis Bioconductor. resource separated introductory, basic, advanced, multi-sample sections, collection workflows illustrating use. good place start workflow get feel data analysis, refer back earlier sections detailed operations understanding. ’ll follow Unfiltered human PBMCs workflow another PBMC data, use dataset Seurat section earlier article.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/c-sc-analysis.html","id":"workflow-1","dir":"Articles","previous_headings":"Bioconductor","what":"Workflow","title":"C. Single-Cell Sequence Analysis","text":"Data retrieval outlined . untar()ing data pbmc3k_data_dir location use data input. data input requires massaging workflow continues step detect empty drops. algorithm partially stochastic, set.seed() ensures reproducibility.","code":"library(DropletUtils) library(scuttle) pbmc3k <- read10xCounts(pbmc3k_data_dir, col.names = TRUE) ## as(<dgTMatrix>, \"dgCMatrix\") is deprecated since Matrix 1.5-0; do as(., \"CsparseMatrix\") instead  pbmc3k ## class: SingleCellExperiment  ## dim: 32738 2700  ## metadata(1): Samples ## assays(1): counts ## rownames(32738): ENSG00000243485 ENSG00000237613 ... ENSG00000215616 ##   ENSG00000215611 ## rowData names(2): ID Symbol ## colnames(2700): AAACATACAACCAC-1 AAACATTGAGCTAC-1 ... TTTGCATGAGAGGC-1 ##   TTTGCATGCCTCAC-1 ## colData names(2): Sample Barcode ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): rownames(pbmc3k) <-     uniquifyFeatureNames(rowData(pbmc3k)$ID, rowData(pbmc3k)$Symbol) ## set.seed(100) ## e.out <- emptyDrops(pbmc3k)"},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/d-objects.html","id":"data-retrieval","dir":"Articles","previous_headings":"","what":"Data retrieval","title":"D. Working Directly with Data","text":"following abbreviated version steps illustrated previous article.","code":"## use a known dataset ID, discovered previously.. dataset <- \"de985818-285f-4f59-9dbd-d74968fddba3\" training_cxg_dataset(dataset) ## title: A single-cell atlas of the healthy breast tissues reveals ##     clinically relevant clusters of breast epithelial cells ## description: Single-cell RNA sequencing (scRNA-seq) is an evolving ##     technology used to elucidate the cellular architecture of adult ##     organs. Previous scRNA-seq on breast tissue utilized reduction ##     mammoplasty samples, which are often histologically abnormal. We ##     report a rapid tissue collection/processing protocol to perform ##     scRNA-seq of breast biopsies of healthy women and identify 23 ##     breast epithelial cell clusters. Putative cell-of-origin signatures ##     derived from these clusters are applied to analyze transcriptomes ##     of ~3,000 breast cancers. Gene signatures derived from mature ##     luminal cell clusters are enriched in ~68% of breast cancers, ##     whereas a signature from a luminal progenitor cluster is enriched ##     in ~20% of breast cancers. Overexpression of luminal progenitor ##     cluster-derived signatures in HER2+, but not in other subtypes, is ##     associated with unfavorable outcome. We identify TBX3 and PDK4 as ##     genes co-expressed with estrogen receptor (ER) in the normal ##     breasts, and their expression analyses in >550 breast cancers ##     enable prognostically relevant subclassification of ER+ breast ##     cancers. ## authors: Bhat-Nakshatri, Poornima; Gao, Hongyu; Sheng, Liu; McGuire, ##     Patrick C.; Xuei, Xiaoling; Wan, Jun; Liu, Yunlong; Althouse, ##     Sandra K.; Colter, Austyn; Sandusky, George; Storniolo, Anna Maria; ##     Nakshatri, Harikrishna ## journal: Cell Reports Medicine ## assays: 10x 3' v2; 10x 3' v3 ## organism: Homo sapiens ## ethnicity: African American; Chinese; European  ## download (or retieve from the local cache) the file h5ad_file <-     files() |>     dplyr::filter(filetype == \"H5AD\", dataset_id == dataset) |>     files_download(dry.run = FALSE)  ## import into R as a SingleCellExperiment h5ad <- training_read_h5ad_as_sce(h5ad_file)"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/d-objects.html","id":"exploring-pre-computed-data","dir":"Articles","previous_headings":"","what":"Exploring Pre-computed Data","title":"D. Working Directly with Data","text":"illustrate steps data CELLxGENE retrieved previous article. data need proceed simple count matrix produced Cell Ranger (etc.) careful quality control, normalization, data integration / batch coorrection, etc., illustrated subsequent section.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/d-objects.html","id":"basic-manipulation","dir":"Articles","previous_headings":"Exploring Pre-computed Data","what":"Basic Manipulation","title":"D. Working Directly with Data","text":"Displaying SingleCellExperiment… …suggests data available access – 33234 genes 31696 cells. ‘raw’ data include gene x cell count matricies (assay()) annotations genes (rowData()) columns (cellData()), reduced-dimension summaries. instance, cell (column) annotations easily accessible summarized Many common operations standardized number Bioconductor packages. instance, use functionality scater package visualize UMAP present object, coloring cell_type column data annotation.  One can also work data directly, e.g., plot distribution reads per cell…  …remove genes non-zero counts ’s also easy find information samples included study, e.g., individual donors, ethnicty, family history breast cancer (specific information available depends data submitted original investigator). Glancing table, see little replication serious confounding factors.","code":"h5ad ## class: SingleCellExperiment  ## dim: 33234 31696  ## metadata(3): default_embedding schema_version title ## assays(1): counts ## rownames(33234): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 ##   ENSG00000268674 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0): colData(h5ad) |>     as_tibble() ## # A tibble: 31,696 × 34 ##    donor_id      self_…¹ donor…² donor…³ famil…⁴ organ…⁵ tyrer…⁶ sampl…⁷ sampl…⁸ ##    <fct>         <fct>   <fct>   <fct>   <fct>   <fct>   <fct>   <fct>   <fct>   ##  1 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  2 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  3 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  4 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  5 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  6 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  7 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  8 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ##  9 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ## 10 pooled [D9,D… HANCES… pooled… pooled… pooled… NCBITa… pooled… pooled… cryopr… ## # … with 31,686 more rows, 25 more variables: tissue_ontology_term_id <fct>, ## #   development_stage_ontology_term_id <fct>, suspension_uuid <fct>, ## #   suspension_type <fct>, library_uuid <fct>, assay_ontology_term_id <fct>, ## #   mapped_reference_annotation <fct>, is_primary_data <lgl>, ## #   cell_type_ontology_term_id <fct>, author_cell_type <fct>, ## #   disease_ontology_term_id <fct>, sex_ontology_term_id <fct>, ## #   nCount_RNA <dbl>, nFeature_RNA <int>, percent.mito <dbl>, …  colData(h5ad) |>     as_tibble() |>     group_by(donor_id, self_reported_ethnicity) |>     dplyr::count() ## # A tibble: 7 × 3 ## # Groups:   donor_id, self_reported_ethnicity [7] ##   donor_id                 self_reported_ethnicity     n ##   <fct>                    <fct>                   <int> ## 1 D1                       European                 2303 ## 2 D2                       European                  864 ## 3 D3                       African American         2517 ## 4 D4                       European                 1771 ## 5 D5                       European                 2244 ## 6 D11                      Chinese                  7454 ## 7 pooled [D9,D7,D8,D10,D6] European                14543  colData(h5ad) |>     as_tibble() |>     dplyr::count(cell_type, sort = TRUE) ## # A tibble: 6 × 2 ##   cell_type                                    n ##   <fct>                                    <int> ## 1 progenitor cell                          19987 ## 2 basal cell                                7040 ## 3 luminal epithelial cell of mammary gland  4257 ## 4 B cell                                     215 ## 5 endothelial cell of lymphatic vessel       133 ## 6 endocrine cell                              64 scater::plotReducedDim(h5ad, \"X_umap\", color_by = \"cell_type\") reads_per_cell <-     h5ad |>     ## retrieve the matrix of gene x cell counts     assay(\"counts\", withDimnames = FALSE) |>     ## calculate the column sums, i.e., reads mapped to each cell     colSums()  hist(log10(reads_per_cell)) reads_per_gene <-     h5ad |>     assay(\"counts\", withDimnames = FALSE) |>     rowSums()  table(reads_per_gene != 0) ##  ## FALSE  TRUE  ## 10499 22735  h5ad[reads_per_gene != 0,] ## class: SingleCellExperiment  ## dim: 22735 31696  ## metadata(3): default_embedding schema_version title ## assays(1): counts ## rownames(22735): ENSG00000238009 ENSG00000237491 ... ENSG00000276345 ##   ENSG00000271254 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0): SingleCellExperiment::colData(h5ad) |>     as_tibble() |>     dplyr::count(         donor_id, self_reported_ethnicity, family_history_breast_cancer     ) ## # A tibble: 7 × 4 ##   donor_id                 self_reported_ethnicity family_history_breast…¹     n ##   <fct>                    <fct>                   <fct>                   <int> ## 1 D1                       European                unknown                  2303 ## 2 D2                       European                True                      864 ## 3 D3                       African American        True                     2517 ## 4 D4                       European                False                    1771 ## 5 D5                       European                True                     2244 ## 6 D11                      Chinese                 True                     7454 ## 7 pooled [D9,D7,D8,D10,D6] European                pooled [unknown,False,… 14543 ## # … with abbreviated variable name ¹​family_history_breast_cancer"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/d-objects.html","id":"visualization","dir":"Articles","previous_headings":"Exploring Pre-computed Data","what":"Visualization","title":"D. Working Directly with Data","text":"previous section created static visualization ‘UMAP’ reduced dimension representation using scater::plotReducedDim(): can helpful ‘hand’ illustrate one can work directly SingleCellExperiment objects. First load ggplot2 create tibble containing information UMAP, well cell (column) annotations Visualize two-dimensional UMAP summary, coloring cell type  plotly package provides convenient way make interactive plot suprisingly straight-forward (admittedly advanced) helper function uses shiny allows us write application select data interested … check !","code":"library(ggplot2) umap <-     as_tibble(reducedDim(h5ad, \"X_umap\")) |>     bind_cols(         cell_type = h5ad$cell_type,         donor_id = h5ad$donor_id,         self_reported_ethnicity = h5ad$self_reported_ethnicity,         colname = colnames(h5ad) # unique identifier     ) ## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if ## `.name_repair` is omitted as of tibble 2.0.0. ## ℹ Using compatibility `.name_repair`. ggplot(umap) +     aes(x = V1, y = V2, color = cell_type) +     geom_point(pch = \".\") library(plotly)  plot_ly(     umap,     x = ~ V1, y =  ~ V2, color = ~ cell_type,     type = \"scatter\", mode = \"markers\", opacity = .8,     marker = list(symbol = \"circle-open\", line = list(width = 1)) ) result <- training_cell_viewer(umap) # select some cells of interest result ## subset the SingleCellExperiment to just those cells h5ad[, result$colname]"},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/d-objects.html","id":"gene-sets","dir":"Articles","previous_headings":"Exploring Pre-computed Data","what":"Gene Sets","title":"D. Working Directly with Data","text":"single cell assay detected expression 33234 genes, may often interested set . gene sets might defined research interests, may defined ‘community standards’. Check MSigDB – collection gene sets! Focus Halmarks Cancer gene sets ‘H: hallmark gene sets’. NOTE MSigDB requires registration, triggered downloading gene set manually; first, even though use automatically downloaded gene sets. helper function training_hallmarks() downloads ‘Hallmarks Cancer’ gene sets MSigDb, translating ‘Entrez’ gene identifiers gene sets ‘Ensembl’ identifiers (rownames(h5ad)) data. Suppose interested HALLMARK_P53_PATHWAY gene set can create subset data just genes (identifiers p53_gene_set present observed data…) easy visualize UMAP subset genes, perform addditional analyses.","code":"hallmarks <- training_hallmarks() ## visit 'https://www.gsea-msigdb.org/gsea/msigdb/human/collections.jsp' ##     to register for use of the MSigDb 'hallmarks' dataset. ## 'select()' returned 1:many mapping between keys and columns hallmarks ## # A tibble: 8,220 × 3 ##    gene            set                                      description          ##    <chr>           <chr>                                    <chr>                ##  1 ENSG00000000938 HALLMARK_ALLOGRAFT_REJECTION             http://www.gsea-msi… ##  2 ENSG00000000971 HALLMARK_INTERFERON_GAMMA_RESPONSE       http://www.gsea-msi… ##  3 ENSG00000000971 HALLMARK_COMPLEMENT                      http://www.gsea-msi… ##  4 ENSG00000000971 HALLMARK_COAGULATION                     http://www.gsea-msi… ##  5 ENSG00000000971 HALLMARK_KRAS_SIGNALING_UP               http://www.gsea-msi… ##  6 ENSG00000001084 HALLMARK_MTORC1_SIGNALING                http://www.gsea-msi… ##  7 ENSG00000001084 HALLMARK_XENOBIOTIC_METABOLISM           http://www.gsea-msi… ##  8 ENSG00000001084 HALLMARK_GLYCOLYSIS                      http://www.gsea-msi… ##  9 ENSG00000001084 HALLMARK_REACTIVE_OXYGEN_SPECIES_PATHWAY http://www.gsea-msi… ## 10 ENSG00000001084 HALLMARK_HEME_METABOLISM                 http://www.gsea-msi… ## # … with 8,210 more rows  ## gene sets and their counts hallmarks |> dplyr::count(set) |> DT::datatable() p53_gene_set <-     hallmarks |>     filter(set == \"HALLMARK_P53_PATHWAY\") nrow(p53_gene_set) ## [1] 214 p53_rows <- rownames(h5ad) %in% pull(p53_gene_set, \"gene\") h5ad_p53 <- h5ad[p53_rows,] h5ad_p53 ## class: SingleCellExperiment  ## dim: 200 31696  ## metadata(3): default_embedding schema_version title ## assays(1): counts ## rownames(200): ENSG00000116213 ENSG00000142627 ... ENSG00000142192 ##   ENSG00000160310 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0): ## UMAP coordinate. N.B., this is taking a subset of the UMAP ## coordinates computed on all genes, not re-calculating a UMAP on the ## P53 gene set. umap_p53 <-     as_tibble(reducedDim(h5ad_p53, \"X_umap\")) |>     bind_cols(         cell_type = h5ad_p53$cell_type,         donor_id = h5ad_p53$donor_id,         self_reported_ethnicity = h5ad_p53$self_reported_ethnicity,         colname = colnames(h5ad_p53) # unique identifier     )  plot_ly(     umap_p53,     x = ~ V1, y =  ~ V2, color = ~ cell_type,     type = \"scatter\", mode = \"markers\", opacity = .8,     marker = list(symbol = \"circle-open\", line = list(width = 1)) )"},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/articles/e-directions.html","id":"spatial-transcriptomics","dir":"Articles","previous_headings":"Directions","what":"Spatial Transcriptomics","title":"E. Spatial, Multi-Modal and Extended Analysis","text":"Orchestrating Spatially-Resolved Transcriptomics Analysis Bioconductor","code":""},{"path":[]},{"path":[]},{"path":"https://mtmorgan.github.io/HCABiocTraining/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2022). HCABiocTraining: Introduction Human Cell Atlas Data Access & Analysis R / Bioconductor. R package version 0.0.8, https://mtmorgan.github.io/HCABiocTraining.","code":"@Manual{,   title = {HCABiocTraining: Introduction to Human Cell Atlas Data Access & Analysis in R / Bioconductor},   author = {Martin Morgan},   year = {2022},   note = {R package version 0.0.8},   url = {https://mtmorgan.github.io/HCABiocTraining}, }"},{"path":"https://mtmorgan.github.io/HCABiocTraining/index.html","id":"hcabioctraining","dir":"","previous_headings":"","what":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","title":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","text":"HCABiocTraining introduction Human Cell Atlas data retrieval analysis R / Bioconductor. focus single-cell RNA-seq data. wide range material covered, basic R advanced data analysis steps outlined ‘Orchestrating Single-Cell Analysis Bioconductor’ (OSCA). treatment superficial, hope unlocks opportunities reproducible, sophisticated analysis.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","text":"Install necessary software GitHub :","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://cran.r-project.org\") BiocManager::install(\"mtmorgan/HCABiocTraining\")"},{"path":"https://mtmorgan.github.io/HCABiocTraining/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Introduction to Human Cell Atlas Data Access & Analysis in R /\n    Bioconductor","text":"articles repository cover four main topics Introduction R. Scripting, core functions, contributed packages. HCA Data Access. Using hca cellxgenedp packages data retrieval. R Bioconductor Analysis Single-Cell Expression Data. Introduction key resources available analysis single-cell expression data. Seurat. SingleCellExperiment ‘Orchestrating Single-Cell Analysis Bioconductor’ (OSCA) Prospects spatial extended analysis.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cell_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively Visualize and Subset UMAPs — training_cell_viewer","title":"Interactively Visualize and Subset UMAPs — training_cell_viewer","text":"Interactively Visualize Subset UMAPs","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cell_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively Visualize and Subset UMAPs — training_cell_viewer","text":"","code":"training_cell_viewer(umap)"},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cell_viewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively Visualize and Subset UMAPs — training_cell_viewer","text":"umap tibble() ","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cxg_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize CxG Information About a Dataset — training_cxg_dataset","title":"Summarize CxG Information About a Dataset — training_cxg_dataset","text":"Summarize CxG Information Dataset","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cxg_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize CxG Information About a Dataset — training_cxg_dataset","text":"","code":"training_cxg_dataset(dataset_id)  # S3 method for cxg_dataset print(x, ...)"},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cxg_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize CxG Information About a Dataset — training_cxg_dataset","text":"dataset_id character(1) dataset identifier, returned , e.g., datasets(). x cxg_dataset object resulting call training_cxg_dataset(). ... Additional arguments (print.cxg_dataset()); ignored.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_cxg_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize CxG Information About a Dataset — training_cxg_dataset","text":"","code":"dataset <- \"de985818-285f-4f59-9dbd-d74968fddba3\" ds <- training_cxg_dataset(dataset) ds #> title: A single-cell atlas of the healthy breast tissues reveals #>     clinically relevant clusters of breast epithelial cells #> description: Single-cell RNA sequencing (scRNA-seq) is an evolving #>     technology used to elucidate the cellular architecture of adult #>     organs. Previous scRNA-seq on breast tissue utilized reduction #>     mammoplasty samples, which are often histologically abnormal. We #>     report a rapid tissue collection/processing protocol to perform #>     scRNA-seq of breast biopsies of healthy women and identify 23 #>     breast epithelial cell clusters. Putative cell-of-origin signatures #>     derived from these clusters are applied to analyze transcriptomes #>     of ~3,000 breast cancers. Gene signatures derived from mature #>     luminal cell clusters are enriched in ~68% of breast cancers, #>     whereas a signature from a luminal progenitor cluster is enriched #>     in ~20% of breast cancers. Overexpression of luminal progenitor #>     cluster-derived signatures in HER2+, but not in other subtypes, is #>     associated with unfavorable outcome. We identify TBX3 and PDK4 as #>     genes co-expressed with estrogen receptor (ER) in the normal #>     breasts, and their expression analyses in >550 breast cancers #>     enable prognostically relevant subclassification of ER+ breast #>     cancers. #> authors: Bhat-Nakshatri, Poornima; Gao, Hongyu; Sheng, Liu; McGuire, #>     Patrick C.; Xuei, Xiaoling; Wan, Jun; Liu, Yunlong; Althouse, #>     Sandra K.; Colter, Austyn; Sandusky, George; Storniolo, Anna Maria; #>     Nakshatri, Harikrishna #> journal: Cell Reports Medicine #> assays: 10x 3' v2; 10x 3' v3 #> organism: Homo sapiens #> ethnicity: African American; Chinese; European"},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_hallmarks.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Functions to Process 'Hallmarks of Cancer' MSigDB Gene Sets — training_hallmarks","title":"Helper Functions to Process 'Hallmarks of Cancer' MSigDB Gene Sets — training_hallmarks","text":"training_hallmarks() retrieves 'Hallmarks Cancer' geen sets MSigDB.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_hallmarks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Functions to Process 'Hallmarks of Cancer' MSigDB Gene Sets — training_hallmarks","text":"","code":"training_hallmarks()"},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_hallmarks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Functions to Process 'Hallmarks of Cancer' MSigDB Gene Sets — training_hallmarks","text":"training_hallmarks() creates tibble columns 'gene' (Ensembl identifiers), 'set', 'description' (link description set MSigDB web site).","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_hallmarks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper Functions to Process 'Hallmarks of Cancer' MSigDB Gene Sets — training_hallmarks","text":"often case, Hallmarks Cancer gene sets use gene identifiers NCBI ('Entrez' gene identifiers), data uses gene identifiers Ensembl; function accomplishes tedious task translating gene sets using Bioconductor 'org.Hs.eg.db' data resource annotation functions AnnotationDbi pacakge. mapping identifiers 1:1, number genes Hallmark set differs Ensembl Entrez identifiers.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_hallmarks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Functions to Process 'Hallmarks of Cancer' MSigDB Gene Sets — training_hallmarks","text":"","code":"training_hallmarks() #> visit 'https://www.gsea-msigdb.org/gsea/msigdb/human/collections.jsp' #>     to register for use of the MSigDb 'hallmarks' dataset. #> 'select()' returned 1:many mapping between keys and columns #> # A tibble: 8,220 × 3 #>    gene            set                                      description          #>    <chr>           <chr>                                    <chr>                #>  1 ENSG00000000938 HALLMARK_ALLOGRAFT_REJECTION             http://www.gsea-msi… #>  2 ENSG00000000971 HALLMARK_INTERFERON_GAMMA_RESPONSE       http://www.gsea-msi… #>  3 ENSG00000000971 HALLMARK_COMPLEMENT                      http://www.gsea-msi… #>  4 ENSG00000000971 HALLMARK_COAGULATION                     http://www.gsea-msi… #>  5 ENSG00000000971 HALLMARK_KRAS_SIGNALING_UP               http://www.gsea-msi… #>  6 ENSG00000001084 HALLMARK_MTORC1_SIGNALING                http://www.gsea-msi… #>  7 ENSG00000001084 HALLMARK_XENOBIOTIC_METABOLISM           http://www.gsea-msi… #>  8 ENSG00000001084 HALLMARK_GLYCOLYSIS                      http://www.gsea-msi… #>  9 ENSG00000001084 HALLMARK_REACTIVE_OXYGEN_SPECIES_PATHWAY http://www.gsea-msi… #> 10 ENSG00000001084 HALLMARK_HEME_METABOLISM                 http://www.gsea-msi… #> # … with 8,210 more rows"},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_read_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Read 'h5ad' Files as R / Bioconductor Objects — training_read_h5ad_as_sce","title":"Read 'h5ad' Files as R / Bioconductor Objects — training_read_h5ad_as_sce","text":"read_h5ad_as_sce() uses Python h5ad module R 'anndata' package import .h5ad objects R / Bioconductor 'SingleCellExperiment'.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_read_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read 'h5ad' Files as R / Bioconductor Objects — training_read_h5ad_as_sce","text":"","code":"training_read_h5ad_as_sce(h5ad_file_path)"},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_read_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read 'h5ad' Files as R / Bioconductor Objects — training_read_h5ad_as_sce","text":"h5ad_file_path character(1) path .h5ad file.","code":""},{"path":"https://mtmorgan.github.io/HCABiocTraining/reference/training_read_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read 'h5ad' Files as R / Bioconductor Objects — training_read_h5ad_as_sce","text":"training_read_h5ad_as_sce() returns R / Bioconductor SingleCellExperiment object. assay data X (sparse) matrix named 'X' h5ad file.","code":""}]
